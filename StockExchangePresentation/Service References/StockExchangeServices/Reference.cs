//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockExchangePresentation.StockExchangeServices {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SE_Entities")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.Balance> BalancesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.StockOrder> StockOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.UserStock> UserStocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.Balance> Balances {
            get {
                return this.BalancesField;
            }
            set {
                if ((object.ReferenceEquals(this.BalancesField, value) != true)) {
                    this.BalancesField = value;
                    this.RaisePropertyChanged("Balances");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeDeleted {
            get {
                return this.DateTimeDeletedField;
            }
            set {
                if ((this.DateTimeDeletedField.Equals(value) != true)) {
                    this.DateTimeDeletedField = value;
                    this.RaisePropertyChanged("DateTimeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.StockOrder> StockOrders {
            get {
                return this.StockOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.StockOrdersField, value) != true)) {
                    this.StockOrdersField = value;
                    this.RaisePropertyChanged("StockOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.UserStock> UserStocks {
            get {
                return this.UserStocksField;
            }
            set {
                if ((object.ReferenceEquals(this.UserStocksField, value) != true)) {
                    this.UserStocksField = value;
                    this.RaisePropertyChanged("UserStocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserType {
            get {
                return this.UserTypeField;
            }
            set {
                if ((this.UserTypeField.Equals(value) != true)) {
                    this.UserTypeField = value;
                    this.RaisePropertyChanged("UserType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Balance", Namespace="http://schemas.datacontract.org/2004/07/SE_Entities")]
    [System.SerializableAttribute()]
    public partial class Balance : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Balance1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWithdrawField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockExchangePresentation.StockExchangeServices.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance1 {
            get {
                return this.Balance1Field;
            }
            set {
                if ((this.Balance1Field.Equals(value) != true)) {
                    this.Balance1Field = value;
                    this.RaisePropertyChanged("Balance1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeDeleted {
            get {
                return this.DateTimeDeletedField;
            }
            set {
                if ((this.DateTimeDeletedField.Equals(value) != true)) {
                    this.DateTimeDeletedField = value;
                    this.RaisePropertyChanged("DateTimeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWithdraw {
            get {
                return this.IsWithdrawField;
            }
            set {
                if ((this.IsWithdrawField.Equals(value) != true)) {
                    this.IsWithdrawField = value;
                    this.RaisePropertyChanged("IsWithdraw");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockExchangePresentation.StockExchangeServices.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StockOrder", Namespace="http://schemas.datacontract.org/2004/07/SE_Entities")]
    [System.SerializableAttribute()]
    public partial class StockOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLimitOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOrderExecutedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal OrderStockPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockExchangePresentation.StockExchangeServices.Stock StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockExchangePresentation.StockExchangeServices.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeDeleted {
            get {
                return this.DateTimeDeletedField;
            }
            set {
                if ((this.DateTimeDeletedField.Equals(value) != true)) {
                    this.DateTimeDeletedField = value;
                    this.RaisePropertyChanged("DateTimeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLimitOrder {
            get {
                return this.IsLimitOrderField;
            }
            set {
                if ((this.IsLimitOrderField.Equals(value) != true)) {
                    this.IsLimitOrderField = value;
                    this.RaisePropertyChanged("IsLimitOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOrderExecuted {
            get {
                return this.IsOrderExecutedField;
            }
            set {
                if ((this.IsOrderExecutedField.Equals(value) != true)) {
                    this.IsOrderExecutedField = value;
                    this.RaisePropertyChanged("IsOrderExecuted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderStockPrice {
            get {
                return this.OrderStockPriceField;
            }
            set {
                if ((this.OrderStockPriceField.Equals(value) != true)) {
                    this.OrderStockPriceField = value;
                    this.RaisePropertyChanged("OrderStockPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockExchangePresentation.StockExchangeServices.Stock Stock {
            get {
                return this.StockField;
            }
            set {
                if ((object.ReferenceEquals(this.StockField, value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockCount {
            get {
                return this.StockCountField;
            }
            set {
                if ((this.StockCountField.Equals(value) != true)) {
                    this.StockCountField = value;
                    this.RaisePropertyChanged("StockCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockId {
            get {
                return this.StockIdField;
            }
            set {
                if ((this.StockIdField.Equals(value) != true)) {
                    this.StockIdField = value;
                    this.RaisePropertyChanged("StockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockExchangePresentation.StockExchangeServices.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserStock", Namespace="http://schemas.datacontract.org/2004/07/SE_Entities")]
    [System.SerializableAttribute()]
    public partial class UserStock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockExchangePresentation.StockExchangeServices.Stock StockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StockIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private StockExchangePresentation.StockExchangeServices.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeDeleted {
            get {
                return this.DateTimeDeletedField;
            }
            set {
                if ((this.DateTimeDeletedField.Equals(value) != true)) {
                    this.DateTimeDeletedField = value;
                    this.RaisePropertyChanged("DateTimeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockExchangePresentation.StockExchangeServices.Stock Stock {
            get {
                return this.StockField;
            }
            set {
                if ((object.ReferenceEquals(this.StockField, value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockCount {
            get {
                return this.StockCountField;
            }
            set {
                if ((this.StockCountField.Equals(value) != true)) {
                    this.StockCountField = value;
                    this.RaisePropertyChanged("StockCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StockId {
            get {
                return this.StockIdField;
            }
            set {
                if ((this.StockIdField.Equals(value) != true)) {
                    this.StockIdField = value;
                    this.RaisePropertyChanged("StockId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public StockExchangePresentation.StockExchangeServices.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stock", Namespace="http://schemas.datacontract.org/2004/07/SE_Entities")]
    [System.SerializableAttribute()]
    public partial class Stock : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeAddedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeUpdatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> HighPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> LowPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> StartPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StockNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.StockOrder> StockOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.UserStock> UserStocksField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTimeAdded {
            get {
                return this.DateTimeAddedField;
            }
            set {
                if ((this.DateTimeAddedField.Equals(value) != true)) {
                    this.DateTimeAddedField = value;
                    this.RaisePropertyChanged("DateTimeAdded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeDeleted {
            get {
                return this.DateTimeDeletedField;
            }
            set {
                if ((this.DateTimeDeletedField.Equals(value) != true)) {
                    this.DateTimeDeletedField = value;
                    this.RaisePropertyChanged("DateTimeDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTimeUpdated {
            get {
                return this.DateTimeUpdatedField;
            }
            set {
                if ((this.DateTimeUpdatedField.Equals(value) != true)) {
                    this.DateTimeUpdatedField = value;
                    this.RaisePropertyChanged("DateTimeUpdated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> HighPrice {
            get {
                return this.HighPriceField;
            }
            set {
                if ((this.HighPriceField.Equals(value) != true)) {
                    this.HighPriceField = value;
                    this.RaisePropertyChanged("HighPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> LowPrice {
            get {
                return this.LowPriceField;
            }
            set {
                if ((this.LowPriceField.Equals(value) != true)) {
                    this.LowPriceField = value;
                    this.RaisePropertyChanged("LowPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> StartPrice {
            get {
                return this.StartPriceField;
            }
            set {
                if ((this.StartPriceField.Equals(value) != true)) {
                    this.StartPriceField = value;
                    this.RaisePropertyChanged("StartPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StockName {
            get {
                return this.StockNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StockNameField, value) != true)) {
                    this.StockNameField = value;
                    this.RaisePropertyChanged("StockName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.StockOrder> StockOrders {
            get {
                return this.StockOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.StockOrdersField, value) != true)) {
                    this.StockOrdersField = value;
                    this.RaisePropertyChanged("StockOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<StockExchangePresentation.StockExchangeServices.UserStock> UserStocks {
            get {
                return this.UserStocksField;
            }
            set {
                if ((object.ReferenceEquals(this.UserStocksField, value) != true)) {
                    this.UserStocksField = value;
                    this.RaisePropertyChanged("UserStocks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockExchangeServices.IStockExchangeOrder")]
    public interface IStockExchangeOrder {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Register", ReplyAction="http://tempuri.org/IStockExchangeOrder/RegisterResponse")]
        bool Register(string userName, string password, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Register", ReplyAction="http://tempuri.org/IStockExchangeOrder/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string userName, string password, string emailAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Login", ReplyAction="http://tempuri.org/IStockExchangeOrder/LoginResponse")]
        SE_Services.ViewModels.UserViewModel Login(StockExchangePresentation.StockExchangeServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Login", ReplyAction="http://tempuri.org/IStockExchangeOrder/LoginResponse")]
        System.Threading.Tasks.Task<SE_Services.ViewModels.UserViewModel> LoginAsync(StockExchangePresentation.StockExchangeServices.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Logout", ReplyAction="http://tempuri.org/IStockExchangeOrder/LogoutResponse")]
        void Logout(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/Logout", ReplyAction="http://tempuri.org/IStockExchangeOrder/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetAllStocks", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetAllStocksResponse")]
        System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel> GetAllStocks(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetAllStocks", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetAllStocksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel>> GetAllStocksAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetAllUserStocks", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetAllUserStocksResponse")]
        System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel> GetAllUserStocks(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetAllUserStocks", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetAllUserStocksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel>> GetAllUserStocksAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetStockPrice", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetStockPriceResponse")]
        int GetStockPrice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetStockPrice", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetStockPriceResponse")]
        System.Threading.Tasks.Task<int> GetStockPriceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/AddStock", ReplyAction="http://tempuri.org/IStockExchangeOrder/AddStockResponse")]
        void AddStock(StockExchangePresentation.StockExchangeServices.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/AddStock", ReplyAction="http://tempuri.org/IStockExchangeOrder/AddStockResponse")]
        System.Threading.Tasks.Task AddStockAsync(StockExchangePresentation.StockExchangeServices.Stock stock);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetCurrentUserId", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetCurrentUserIdResponse")]
        int GetCurrentUserId();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetCurrentUserId", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetCurrentUserIdResponse")]
        System.Threading.Tasks.Task<int> GetCurrentUserIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/BalanceTransaction", ReplyAction="http://tempuri.org/IStockExchangeOrder/BalanceTransactionResponse")]
        void BalanceTransaction(SE_Services.ViewModels.BalanceViewModel balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/BalanceTransaction", ReplyAction="http://tempuri.org/IStockExchangeOrder/BalanceTransactionResponse")]
        System.Threading.Tasks.Task BalanceTransactionAsync(SE_Services.ViewModels.BalanceViewModel balance);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetBalance", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetBalanceResponse")]
        decimal GetBalance(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/GetBalance", ReplyAction="http://tempuri.org/IStockExchangeOrder/GetBalanceResponse")]
        System.Threading.Tasks.Task<decimal> GetBalanceAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/MarketOrder", ReplyAction="http://tempuri.org/IStockExchangeOrder/MarketOrderResponse")]
        void MarketOrder(SE_Services.ViewModels.StockOrderViewModel stockOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockExchangeOrder/MarketOrder", ReplyAction="http://tempuri.org/IStockExchangeOrder/MarketOrderResponse")]
        System.Threading.Tasks.Task MarketOrderAsync(SE_Services.ViewModels.StockOrderViewModel stockOrder);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockExchangeOrderChannel : StockExchangePresentation.StockExchangeServices.IStockExchangeOrder, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockExchangeOrderClient : System.ServiceModel.ClientBase<StockExchangePresentation.StockExchangeServices.IStockExchangeOrder>, StockExchangePresentation.StockExchangeServices.IStockExchangeOrder {
        
        public StockExchangeOrderClient() {
        }
        
        public StockExchangeOrderClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockExchangeOrderClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockExchangeOrderClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockExchangeOrderClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string userName, string password, string emailAddress) {
            return base.Channel.Register(userName, password, emailAddress);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string userName, string password, string emailAddress) {
            return base.Channel.RegisterAsync(userName, password, emailAddress);
        }
        
        public SE_Services.ViewModels.UserViewModel Login(StockExchangePresentation.StockExchangeServices.User user) {
            return base.Channel.Login(user);
        }
        
        public System.Threading.Tasks.Task<SE_Services.ViewModels.UserViewModel> LoginAsync(StockExchangePresentation.StockExchangeServices.User user) {
            return base.Channel.LoginAsync(user);
        }
        
        public void Logout(int userId) {
            base.Channel.Logout(userId);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(int userId) {
            return base.Channel.LogoutAsync(userId);
        }
        
        public System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel> GetAllStocks(int userId) {
            return base.Channel.GetAllStocks(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel>> GetAllStocksAsync(int userId) {
            return base.Channel.GetAllStocksAsync(userId);
        }
        
        public System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel> GetAllUserStocks(int userId) {
            return base.Channel.GetAllUserStocks(userId);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<SE_Services.ViewModels.StockViewModel>> GetAllUserStocksAsync(int userId) {
            return base.Channel.GetAllUserStocksAsync(userId);
        }
        
        public int GetStockPrice(int id) {
            return base.Channel.GetStockPrice(id);
        }
        
        public System.Threading.Tasks.Task<int> GetStockPriceAsync(int id) {
            return base.Channel.GetStockPriceAsync(id);
        }
        
        public void AddStock(StockExchangePresentation.StockExchangeServices.Stock stock) {
            base.Channel.AddStock(stock);
        }
        
        public System.Threading.Tasks.Task AddStockAsync(StockExchangePresentation.StockExchangeServices.Stock stock) {
            return base.Channel.AddStockAsync(stock);
        }
        
        public int GetCurrentUserId() {
            return base.Channel.GetCurrentUserId();
        }
        
        public System.Threading.Tasks.Task<int> GetCurrentUserIdAsync() {
            return base.Channel.GetCurrentUserIdAsync();
        }
        
        public void BalanceTransaction(SE_Services.ViewModels.BalanceViewModel balance) {
            base.Channel.BalanceTransaction(balance);
        }
        
        public System.Threading.Tasks.Task BalanceTransactionAsync(SE_Services.ViewModels.BalanceViewModel balance) {
            return base.Channel.BalanceTransactionAsync(balance);
        }
        
        public decimal GetBalance(int userId) {
            return base.Channel.GetBalance(userId);
        }
        
        public System.Threading.Tasks.Task<decimal> GetBalanceAsync(int userId) {
            return base.Channel.GetBalanceAsync(userId);
        }
        
        public void MarketOrder(SE_Services.ViewModels.StockOrderViewModel stockOrder) {
            base.Channel.MarketOrder(stockOrder);
        }
        
        public System.Threading.Tasks.Task MarketOrderAsync(SE_Services.ViewModels.StockOrderViewModel stockOrder) {
            return base.Channel.MarketOrderAsync(stockOrder);
        }
    }
}
